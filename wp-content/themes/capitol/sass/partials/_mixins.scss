@mixin calc($property, $expression) {
  #{$property}: -webkit-calc(#{$expression});
  #{$property}: -moz-calc(#{$expression});
  #{$property}: calc(#{$expression});
}

@mixin scrollbars($size, $foreground-color, $background-color: mix($foreground-color, white, 50%)) {
  ::-webkit-scrollbar {
      width:  $size;
      height: $size;
  }

  ::-webkit-scrollbar-thumb {
    border-radius: 10px;
	-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);
    background: $foreground-color;
  }

  ::-webkit-scrollbar-track {
    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
	border-radius: 10px;
    background: $background-color;
  }

  // For Internet Explorer
  body {
    scrollbar-face-color: $foreground-color;
    scrollbar-track-color: $background-color;
  }
}


/*TRANSLATE CENTER*/
@mixin translate( $x: null, $y: null ) {
	-webkit-transform: translate($x, $y);
	-moz-transform: translate($x, $y);
	transform: translate($x, $y);
}

@mixin rotate( $perspective: X, $degree: 45 ) {
	-webkit-transform: rotate#{$perspective}#{("(#{$degree}deg)")};
	-moz-transform: rotate#{$perspective}#{("(#{$degree}deg)")};
	transform: rotate#{$perspective}#{("(#{$degree}deg)")};
}

@mixin transform($transform, $transform2: null) {
  -webkit-transform: $transform, $transform2;
     -moz-transform: $transform, $transform2;
      -ms-transform: $transform, $transform2;
       -o-transform: $transform, $transform2;
          transform: $transform, $transform2;
}

/*ANIMATIONS*/
@mixin keyframes($animation-name) {
    @-webkit-keyframes $animation-name {
        @content;
    }
    @-moz-keyframes $animation-name {
        @content;
    }
    @keyframes $animation-name {
        @content;
    }
}

@mixin animation($str) {
    -webkit-animation: #{$str};
    -moz-animation: #{$str};
    animation: #{$str};
}

@mixin linear-gradient($degree, $fromColor, $toColor, $stop: null) {
  background-image: -webkit-gradient(linear, left top, right bottom, from($fromColor), color-stop($stop), to($toColor)); /* Saf4+, Chrome */
  background-image: -webkit-linear-gradient($degree, $fromColor, $stop, $toColor); /* Chrome 10+, Saf5.1+, iOS 5+ */
  background-image:    -moz-linear-gradient($degree, $fromColor, $stop, $toColor); /* FF3.6 */
  background-image:     -ms-linear-gradient($degree, $fromColor, $stop, $toColor); /* IE10 */
  background-image:      -o-linear-gradient($degree, $fromColor, $stop, $toColor); /* Opera 11.10+ */
  background-image:         linear-gradient($degree, $fromColor, $stop, $toColor);
  filter: progid:DXImageTransform.Microsoft.gradient(GradientType=1,StartColorStr='#{$fromColor}', EndColorStr='#{$toColor}');
}

@mixin grayscale {
    -webkit-filter: grayscale(100%);
    filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\'/></filter></svg>#grayscale"); /* Firefox 10+, Firefox on Android */
    filter: gray; /* IE6-9 */
}

@mixin fullcolor {
    filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'1 0 0 0 0, 0 1 0 0 0, 0 0 1 0 0, 0 0 0 1 0\'/></filter></svg>#grayscale");
    -webkit-filter: grayscale(0%);
}

@mixin box-shadow( $horiz, $vert, $blur, $spread, $color ){
  -webkit-box-shadow: $horiz $vert $blur $spread $color;
  -moz-box-shadow: $horiz $vert $blur $spread $color;
  box-shadow: $horiz $vert $blur $spread $color;
}

@mixin imgblur( $radius ) {
	-webkit-filter: blur($radius+px); -moz-filter: blur($radius+px);
	-o-filter: blur($radius+px); -ms-filter: blur($radius+px);
	filter: url(images/blur.svg#blur); filter: blur($radius+px); filter:progid:DXImageTransform.Microsoft.Blur(PixelRadius='$radius');
}

@mixin border-radius( $top-left, $top-right, $bottom-right, $bottom-left ) {
  -webkit-border-top-left-radius: $top-left+px;
  -webkit-border-top-right-radius: $top-right+px;
  -webkit-border-bottom-right-radius: $bottom-right+px;
  -webkit-border-bottom-left-radius: $bottom-left+px;
  -moz-border-top-left-radius: $top-left+px;
  -moz-border-top-right-radius: $top-right+px;
  -moz-border-bottom-right-radius: $bottom-right+px;
  -moz-border-bottom-left-radius: $bottom-left+px;
  -o-border-top-left-radius: $top-left+px;
  -o-border-top-right-radius: $top-right+px;
  -o-border-bottom-right-radius: $bottom-right+px;
  -o-border-bottom-left-radius: $bottom-left+px;
  -ms-border-top-left-radius: $top-left+px;
  -ms-border-top-right-radius: $top-right+px;
  -ms-border-bottom-right-radius: $bottom-right+px;
  -ms-border-bottom-left-radius: $bottom-left+px;
  border-top-left-radius: $top-left+px;
  border-top-right-radius: $top-right+px;
  border-bottom-right-radius: $bottom-right+px;
  border-bottom-left-radius: $bottom-left+px;
}

@mixin scale( $size ) {
	-webkit-transform: scale($size);
	-moz-transform: scale($size);
	-o-transform: scale($size);
	-ms-transform: scale($size);
	transform: scale($size);
}

@mixin transition( $property: all, $duration: 0.2s, $function: ease-in-out, $delay: null ) {
	-webkit-transition: $property $duration $function $delay;
	-moz-transition: $property $duration $function $delay;
	-o-transition: $property $duration $function $delay;
	-ms-transition: $property $duration $function $delay;
	transition: $property $duration $function $delay;
}